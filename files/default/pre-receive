#!/bin/bash -el

# This script uses the archive-server (https://github.com/tsuru/archive-server)
# to generate archives and deploy applications using them.
#
# It depends on the following environment variables:
#
#   - ARCHIVE_SERVER_READ: the base URL that will be sent to the tsuru server,
#                          is a public URL that will be used to serve the
#                          archive (for example: http://archive-server:8080)
#   - ARCHIVE_SERVER_WRITE: the base URL that will be used to generate the
#                           archive, it's commonly a private URL (for example:
#                           http://127.0.0.1:8181)
#   - TSURU_HOST: URL to the Tsuru API (for example: http://yourtsuru:8080)
#   - TSURU_TOKEN: the token to communicate with the API (generated with `tsr
#                  token`, in the server).

while read oldrev newrev refname
do
  COMMIT=${newrev}
done

generate_archive() {
  url="${ARCHIVE_SERVER_WRITE}/"
  result=`curl -sNd "path=${1}&refid=${2}" --max-time 1800 $url`
  python <<END
import json
print json.loads(u"""${result}""")["id"]
END
}

app_dir=${PWD##*/}
app_name=${app_dir/.git/}
archive_id=`generate_archive $PWD $COMMIT`
archive_url="${ARCHIVE_SERVER_READ}/?id=$archive_id"
url="${TSURU_HOST}/apps/${app_name}/repository/clone"
curl -H "Authorization: bearer ${TSURU_TOKEN}" -d "archive-url=${archive_url}&commit=${COMMIT}" -s -N --max-time 1800 $url | tee /tmp/deploy-${APP_NAME}.log
tail -1 /tmp/deploy-${APP_NAME}.log | grep -q "^OK$"
